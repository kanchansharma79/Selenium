package test;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.*;
import org.testng.asserts.SoftAssert;

public class HorizonHobbyBasic {

	//Define the global variables
	SoftAssert sa;
	WebDriver driver;
	String chromeDriverPath = "D:\\WorkspaceDependencies\\Drivers\\Browser\\chromedriver.exe";
	String baseURL = "https://www-tst.horizonhobby.com/";
	
	/// Configuration setup for test execution
	@BeforeClass
	public void beforeClass() {
		System.out.println("\nPrint : executing beforeClass...");
		System.setProperty("webdriver.chrome.driver", chromeDriverPath);
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		sa = new SoftAssert();
	}

	
	@Test
	public void HHSearchFeature() throws InterruptedException {
		System.out.println("\nPrint : Test executing...");
		driver.get(baseURL);
		String title = driver.getTitle();
		System.out.println("Application home page title is: "+title);
		sa.assertEquals(title, "RC Airplanes, Multirotors, Cars, Trucks and Helicopters | HorizonHobby");
		
		driver.findElement(By.id("SimpleSearchForm_SearchTerm")).sendKeys("Heli");		
		driver.findElement(By.className("search_submit")).click();
		
		// Explicit wait implementation will ask to add 'throws InterruptedException' at class level
		Thread.sleep(5);
		
		// Now click first item product in the search result listing
		driver.findElement(By.className("product_name")).click();
		
		// Wait for page to load
		Thread.sleep(10);
		
		// Product page title
		title = driver.getTitle();
		System.out.println("Application home page title is: "+title);
		
		Thread.sleep(10);
		String textValue = driver.findElement(By.cssSelector("#widget_product_info_viewer > div.prodInfo_purchase > div.top > a")).getText();
		sa.assertEquals(textValue, "$24/mo with Affirm");
		
		String cssValue = driver.findElement(By.cssSelector("#widget_product_info_viewer > div.prodInfo_purchase > div.top > a")).getCssValue("color");
		sa.assertEquals(cssValue, "rgba(40, 96, 153, 1)");
	}

	@Test
	public void HHLogin(){
		try	{
			
			System.out.println("\n Login test executing...");
			driver.get(baseURL);
			driver.findElement(By.id("SignInLink")).click();
			driver.findElement(By.cssSelector("#WC_AccountDisplay_FormInput_logonId_In_Logon_1")).sendKeys("ksharma@horizonhobby.com");
			driver.findElement(By.xpath("//*[@id=\"WC_AccountDisplay_FormInput_logonPassword_In_Logon_1\"]")).sendKeys("Qanalyst1");
			driver.findElement(By.linkText("Sign In")).click();
			Thread.sleep(10);
			driver.findElement(By.linkText("Sign Out")).click();
		}catch(Exception e) {
			
		}
	}
	
	
	// Cleanup activity after a test is executed
	@AfterTest
	public void afterTest() {
		System.out.println("\nPrint : executing afterTest...");
		
		//Note:  If you forget to call assertAll() at the end of your test, the test will pass even if any assert objects threw exceptions as shown in the above example. So don’t forget to add assertAll()
		sa.assertAll();
		
		driver.quit();
		
		
	}

}
